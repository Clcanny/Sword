%locations
%define parse.error verbose
%{
    #include "syntax_tree.h"
    #include "SDTAction.h"
    #include "symbol_table.h"
    #include "DebugMacro.h"
    #include "Pointer.h"

    #define GROUP_1 100
    #define GROUP_2 200
    #define GROUP_3 300
    #define GROUP_4 400
    #define GROUP_5 500
    #define GROUP_6 600
    #define GROUP_7 700
    #define GROUP_8 800
    #define GROUP_9 900
    #define GROUP_10 1000
    #define GROUP_11 1100
    #define GROUP_12 1200
    #define GROUP_13 1300
    #define GROUP_14 1400
    #define GROUP_15 1500
    #define GROUP_16 1600

    int has_error = 0;
    void yyerror(const char *msg);
    void yyerror_lineno(const char *msg, int lineno);
%}

%union {
    int type_int;
    void *type_node;
}

%token <type_node> SEMI COMMA COLON SINGLEOR PLACEHOLDER CLASS INSTANCE
%token <type_node> DATA
%token <type_node> DEDUCT FUNC
%token <type_node> REFER
%token <type_node> ASSIGNOP
%token <type_node> RELOP
%token <type_node> PLUS MINUS STAR DIV 
%token <type_node> AND OR NOT DOT
%token <type_node> LET VAR BUILDINTYPE
%token <type_node> LP RP LB RB LC RC
%token <type_node> RETURN IF ELSE WHILE
%token <type_node> INT FLOAT
%token <type_node> LOWERID UPPERID

%type <type_node> TypeParams TypeParamList TypeParam Test
%type <type_node> TypeClassList TypeClassId TypeClassDef VarDefs
%type <type_node> ArrayType ReferType FuncCall ADTType ADTTypeUseList
%type <type_node> ADTHeader ADTParamList PatternMatching PatternMatchingParamList
%type <type_node> ConstructorId TypeId ConstructorUseTypeList ConstructorDec ConstructorDecList ADTDef
%type <type_node> FuncType FuncParamType FuncBody
%type <type_node> DSList
%type <type_node> Program
%type <type_node> Specifier
%type <type_node> VarDec FuncDec VarList ParamDec VarUse
%type <type_node> CompSt Stmt
%type <type_node> VarDef DecList Dec
%type <type_node> Exp Args InstanceDef

%nonassoc LOWER_THAN_ELSE
%nonassoc ELSE

%nonassoc LOWER_THAN_DEDUCT
%nonassoc DEDUCT

%nonassoc LOWER_THAN_SEMI
%nonassoc SEMI

%nonassoc LOWER_THAN_ASSIGNOP
%right ASSIGNOP

%left OR
%left AND
%left RELOP
%left PLUS MINUS
%left STAR DIV
%right NOT
%left LP RP LB RB DOT

%start Test

%%
