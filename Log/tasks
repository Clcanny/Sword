支持含占位符的函数调用的类型推断
2个时间单位
1个时间单位

ADT constructor 类型推断
2个单位时间
2个单位时间（未完成，插入新任务）

重构TypeId相关代码，使得其other_info指向其类型
添加产生式，使得ADT支持原生类型
3个单位时间
所有变量的定义部分的信息都是不允许修改的，可以做一次深拷贝，然后随便改
6个单位时间

重构7.c代码，重点检查指针的分配与释放问题
统一调试语句的格式
在7.c的头部写上引用外界的指针和暴露给外界的指针
2个单位时间
造一个指针自动检查系统：记录那个指针是那个产生式分配的，是那个产生式释放的
allocPointer(void **pointer, void * value, int isTypeInfo);
deallocPointer(void **pointer)
把释放指针的断言放到里面去
如果完全遵循回收规则，那么根据分配者就自然能够决定回收者是否合理
指针回收应该更加智能
2个时间单位未完成，预估还需要5个时间单位
实际上还花费了15个时间单位
对遇到的困难估计不足

解决makeAbstract不输出log的问题
预计需要1个单位时间
完成需要1个单位时间

编写针对4.c的测试用例
使得4.c函数覆盖率100，以保证后面的开发
预计完成需要1个时间单位
实际已使用1个时间单位
遇到断言失败的情况，跳到修复过程
预计需要2个时间单位
完成需要1个时间单位

整理4.c代码，重点删除无用代码，并且确认指针相关操作是否合理
预计1个单位时间
实际1个时间单位完成

继承9.c与测试组件
预计1个时间单位
产生式904遇到bug，需要修复，预计需要1个时间单位
消除bug实际使用1个小时
需要添加写时复制检查机制（组件开发任务，放到后面做）
继承9.c与测试组件成功，花费1个时间单位

开发写时复制系统
对写操作给出一定的提示
writeFieldOf()

引入gtest进行必要的单元测试
预计1个时间单位
