data Maybe a  = Just a | Nothing

Maybe[] x
Maybe[Int] y
Maybe[Int Float] z

data Either a b = Left a | Right b

Either[Int Maybe[Int]] a

refer(Int) pa = refer(a)

defer(refer(a))

Func[a: InterfaceA InterfaceC, b: Interface B](a -> b -> refer(a)) f = [a: InterfaceA, b: InterfaceB](a x, b y) -> a {
}
